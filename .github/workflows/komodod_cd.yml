name: Komodo build releases


on:
  push:
    branches:
    - dev
    - jl777_dev
  schedule:
    # Run at 00:00 UTC on Monday
    - cron:  "0 0 * * 1"

jobs:

  linux-build:
    name: linux-build
    runs-on: ubuntu-latest
    env:
      IMAGE_REPO: docker.pkg.github.com/meshbits/komodo/komodobuild_linux:latest
      CONTAINER_NAME: komodobuild_linux

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Docker Login
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.ns408_packages_token }}

      - name: Pull Docker image
        run: |
          docker pull ${{ env.IMAGE_REPO }}

      - name: Run image (Build Linux)
        run: |
          nproc=$(cat /proc/cpuinfo | grep processor | wc -l)
          docker run -it -d --name ${{ env.CONTAINER_NAME }} -v $GITHUB_WORKSPACE:/workspace -w /workspace ${{ env.IMAGE_REPO }}
          docker exec -w /workspace ${{ env.CONTAINER_NAME }} ./zcutil/build.sh -j$(nproc)
          docker exec -w /workspace ${{ env.CONTAINER_NAME }} zip --junk-paths komodo-linux src/komodod src/komodo-cli

      - name: Upload komodo-linux.zip as artifact
        uses: actions/upload-artifact@v1
        with:
          name: komodo-linux
          path: ./komodo-linux.zip

  macOS-build:
    name: macOS-build
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install deps (macOS)
        run: |
          brew update
          brew upgrade
          brew tap discoteq/discoteq; brew install flock
          brew install autoconf autogen automake binutils \
            gcc@8 protobuf coreutils wget python3

      - name: Build (macOS)
        run: |
          ./zcutil/build-mac.sh -j$(sysctl -n hw.ncpu)
          zip --junk-paths komodo-macOS src/komodod src/komodo-cli

      - name: Upload komodo-macOS.zip as artifact
        uses: actions/upload-artifact@v1
        with:
          name: komodo-macOS
          path: ./komodo-macOS.zip

  windows-build:
    name: windows-build (mingw)
    runs-on: ubuntu-20.04
    env:
      IMAGE_REPO: docker.pkg.github.com/meshbits/komodo/komodobuild_win:latest
      CONTAINER_NAME: komodobuild_win

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Docker Login
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.ns408_packages_token }}

      - name: Pull Docker image
        run: |
          docker pull ${{ env.IMAGE_REPO }}

      - name: Run image (Build Windows)
        run: |
          nproc=$(cat /proc/cpuinfo | grep processor | wc -l)
          docker run -it -d --name ${{ env.CONTAINER_NAME }} -v $GITHUB_WORKSPACE:/workspace -w /workspace ${{ env.IMAGE_REPO }}
          docker exec -w /workspace ${{ env.CONTAINER_NAME }} ./zcutil/build-win.sh -j$(nproc)
          docker exec  -w /workspace ${{ env.CONTAINER_NAME }} \
            zip --junk-paths komodo-win src/*.exe src/*.dll

      - name: Upload komodo-win.zip as artifact
        uses: actions/upload-artifact@v1
        with:
          name: komodo-win
          path: ./komodo-win.zip

  publish-release:
      name: Publishing CD releases
      runs-on: ubuntu-latest
      needs: [linux-build, macOS-build, windows-build]

      steps:
        - name: Download komodo-linux.zip
          uses: actions/download-artifact@v1
          with:
            name: komodo-linux

        - name: Download komodo-macOS.zip
          uses: actions/download-artifact@v1
          with:
            name: komodo-macOS

        - name: Download komodo-win.zip
          uses: actions/download-artifact@v1
          with:
            name: komodo-win

        - name: Extract branch name
          shell: bash
          run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          id: extract_branch

        - name: Shortify commit sha
          shell: bash
          run: echo "##[set-output name=sha_short;]$(echo ${GITHUB_SHA::7})"
          id: shortify_commit

        - name: Create Release
          id: create_release
          uses: actions/create-release@latest
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: release_v0.${{ github.run_number }}
            release_name: release_v0.${{ github.run_number }}
            body: |
              CD Release
              Github SHA: ${{ github.sha }}
              Branch: ${{ steps.extract_branch.outputs.branch }}
              Build number: ${{ github.run_number }}
              version: v0.${{ github.run_number }}
            draft: false
            prerelease: true

        - name: Upload Linux Release Asset
          id: upload-linux-release-asset
          uses: actions/upload-release-asset@latest
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
            asset_path: komodo-linux/komodo-linux.zip
            asset_name: komodo_linux_v0.${{ github.run_number }}.zip
            asset_content_type: application/zip

        - name: Upload macOS Release Asset
          id: upload-macOS-release-asset
          uses: actions/upload-release-asset@latest
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
            asset_path: komodo-macOS/komodo-macOS.zip
            asset_name: komodo_macOS_v0.${{ github.run_number }}.zip
            asset_content_type: application/zip

        - name: Upload Windows Release Asset
          id: upload-windows-release-asset
          uses: actions/upload-release-asset@latest
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
            asset_path: komodo-win/komodo-win.zip
            asset_name: komodo_win_v0.${{ github.run_number }}.zip
            asset_content_type: application/zip
