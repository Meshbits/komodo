# we are using separate workflow because CI producing test binaries with CPPFLAGS=-DTESTMODE

name: Komodo CD test releases


on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:

  osx-build:
    name: OSX Build
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install deps (macOS)
        run: |
          brew update
          brew upgrade
          brew tap discoteq/discoteq; brew install flock
          brew install autoconf autogen automake
          brew install gcc@8
          brew install binutils
          brew install protobuf
          brew install coreutils
          brew install wget
          brew install python3
      - name: Build (macOS)
        run: |
          ./zcutil/build-mac.sh -j4
          zip --junk-paths komodo-osx src/komodod src/komodo-cli
      - name: Upload komodo-osx.zip as artifact
        uses: actions/upload-artifact@v1
        with:
          name: komodo-osx
          path: ./komodo-osx.zip

  publish-release:
      name: Publishing CD releases
      runs-on: ubuntu-latest
      needs: osx-build
      steps:
        - name: Download komodo-osx.zip
          uses: actions/download-artifact@v1
          with:
            name: komodo-osx

        - name: Extract branch name
          shell: bash
          run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          id: extract_branch

        - name: Shortify commit sha
          shell: bash
          run: echo "##[set-output name=sha_short;]$(echo ${GITHUB_SHA::7})"
          id: shortify_commit

        - name: Create Release
          id: create_release
          uses: actions/create-release@latest
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: cd_release_${{ steps.shortify_commit.outputs.sha_short }}_${{ steps.extract_branch.outputs.branch }}
            release_name: CD Release ${{ steps.shortify_commit.outputs.sha_short }} ${{ steps.extract_branch.outputs.branch }}
            draft: false
            prerelease: true
        - name: Upload OSX Release Asset
          id: upload-osx-release-asset
          uses: actions/upload-release-asset@latest
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
            asset_path: komodo-osx/komodo-osx.zip
            asset_name: komodo_${{ steps.shortify_commit.outputs.sha_short }}_${{ steps.extract_branch.outputs.branch }}_osx.zip
            asset_content_type: application/zip
